service:
  name: logs
  aggregate: src.aggregates.Log
  injections:
    lock_pool: minos.common.PostgreSqlLockPool
    postgresql_pool: minos.common.PostgreSqlPool
    broker_publisher: minos.networks.BrokerPublisher
    broker_consumer: minos.networks.BrokerConsumer
    broker_pool: minos.networks.DynamicBrokerPool
    transaction_repository: minos.aggregate.PostgreSqlTransactionRepository
    event_repository: minos.aggregate.PostgreSqlEventRepository
    snapshot_repository: minos.aggregate.PostgreSqlSnapshotRepository
    saga_manager: minos.saga.SagaManager
    #    discovery: minos.networks.DiscoveryConnector
    log_repository: src.LogQueryRepository
  services:
    - minos.networks.BrokerProducerService
    - minos.networks.BrokerConsumerService
    - minos.networks.BrokerHandlerService
    - minos.networks.RestService
    - minos.networks.PeriodicTaskSchedulerService
services:
  - src.LogCommandService
rest:
  host: 0.0.0.0
  port: 5000
broker:
  host: localhost
  port: 9092
  queue:
    database: log_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
    records: 1000
    retry: 2
repository:
  database: log_db
  user: minos
  password: min0s
  host: localhost
  port: 5432
snapshot:
  database: log_db
  user: minos
  password: min0s
  host: localhost
  port: 5432
events:
  service: src.LogQueryService
queries:
  service: src.LogQueryService
commands:
  service: src.LogCommandService
saga:
  storage:
    path: "./log.lmdb"
discovery:
  client: minos.networks.MinosDiscoveryClient
  host: localhost
  port: 5567
